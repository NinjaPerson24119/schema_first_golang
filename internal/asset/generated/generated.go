// Code generated by github.com/jmattheis/goverter, DO NOT EDIT.

package generated

import (
	asset "github.com/NinjaPerson24119/schemafirstpricehistory/internal/asset"
	sqlc "github.com/NinjaPerson24119/schemafirstpricehistory/internal/sqlc"
	typeconversions "github.com/NinjaPerson24119/schemafirstpricehistory/internal/typeconversions"
)

type ConverterImpl struct{}

func (c *ConverterImpl) FromRepoModel(source sqlc.TradingAsset) asset.Asset {
	var assetAsset asset.Asset
	assetAsset.AssetID = typeconversions.UUIDToString(source.AssetID)
	assetAsset.Name = source.Name
	assetAsset.Ticker = source.Ticker
	assetAsset.Description = typeconversions.PGTypeTextToString(source.Description)
	assetAsset.CreatedAt = typeconversions.PGTypeTimestampTZToTime(source.CreatedAt)
	assetAsset.UpdatedAt = typeconversions.PGTypeTimestampTZToTime(source.UpdatedAt)
	assetAsset.DeletedAt = typeconversions.PGTypeTimestampTZToTime(source.DeletedAt)
	return assetAsset
}
func (c *ConverterImpl) FromRepoModels(source []sqlc.TradingAsset) []asset.Asset {
	var assetAssetList []asset.Asset
	if source != nil {
		assetAssetList = make([]asset.Asset, len(source))
		for i := 0; i < len(source); i++ {
			assetAssetList[i] = c.FromRepoModel(source[i])
		}
	}
	return assetAssetList
}
func (c *ConverterImpl) ToCreateParams(source asset.Asset) sqlc.CreateAssetParams {
	var sqlcCreateAssetParams sqlc.CreateAssetParams
	sqlcCreateAssetParams.Name = source.Name
	sqlcCreateAssetParams.Ticker = source.Ticker
	sqlcCreateAssetParams.Description = typeconversions.StringToPGTypeText(source.Description)
	return sqlcCreateAssetParams
}
func (c *ConverterImpl) ToUpdateParams(source asset.Asset) (sqlc.UpdateAssetParams, error) {
	var sqlcUpdateAssetParams sqlc.UpdateAssetParams
	sqlcUpdateAssetParams.Name = source.Name
	sqlcUpdateAssetParams.Ticker = source.Ticker
	sqlcUpdateAssetParams.Description = typeconversions.StringToPGTypeText(source.Description)
	uuidUUID, err := typeconversions.StringToUUID(source.AssetID)
	if err != nil {
		return sqlcUpdateAssetParams, err
	}
	sqlcUpdateAssetParams.AssetID = uuidUUID
	return sqlcUpdateAssetParams, nil
}
